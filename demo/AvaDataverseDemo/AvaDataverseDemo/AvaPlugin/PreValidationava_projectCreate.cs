// <copyright file="PreValidationava_projectCreate.cs" company="">
// Copyright (c) 2023 All Rights Reserved
// </copyright>
// <author></author>
// <date>2/22/2023 1:27:19 AM</date>
// <summary>Implements the PreValidationava_projectCreate Plugin.</summary>
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>

using System;
using System.ServiceModel;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;

namespace AvaDataverseDemo.AvaPlugin
{

    /// <summary>
    /// PreValidationava_projectCreate Plugin.
    /// </summary>    
    public class PreValidationava_projectCreate: PluginBase
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PreValidationava_projectCreate"/> class.
        /// </summary>
        /// <param name="unsecure">Contains public (unsecured) configuration information.</param>
        /// <param name="secure">Contains non-public (secured) configuration information.</param>
        public PreValidationava_projectCreate(string unsecure, string secure)
            : base(typeof(PreValidationava_projectCreate))
        {
            
           // TODO: Implement your custom configuration handling.

        }


        /// <summary>
        /// Main entry point for he business logic that the plug-in is to execute.
        /// </summary>
        /// <param name="localContext">The <see cref="LocalPluginContext"/> which contains the
        /// <see cref="IPluginExecutionContext"/>,
        /// <see cref="IOrganizationService"/>
        /// and <see cref="ITracingService"/>
        /// </param>
        /// <remarks>
        /// </remarks>
        protected override void ExecuteCdsPlugin(ILocalPluginContext localContext)
        {
            if (localContext == null)
            {
                throw new InvalidPluginExecutionException(nameof(localContext));
            }           
            // Obtain the tracing service
            ITracingService tracingService = localContext.TracingService;

            try
            { 
                // Obtain the execution context from the service provider.  
                IPluginExecutionContext context = (IPluginExecutionContext)localContext.PluginExecutionContext;

                // Obtain the organization service reference for web service calls.  
                IOrganizationService currentUserService = localContext.CurrentUserService;

                // TODO: Implement your custom Plug-in business logic.
                tracingService.Trace("Ava Plugin initialized");

                var orgSvcContext = localContext.CurrentUserService;

                if (context.Depth < 5)
                {
                    Entity ava_project = new Entity("ava_project");
                    ava_project["project_number"] = 123;
                    orgSvcContext.Create(ava_project);
                }
                else
                {
                    throw new InvalidPluginExecutionException("Ran more than 4 times...");
                }


            }	
            // Only throw an InvalidPluginExecutionException. Please Refer https://go.microsoft.com/fwlink/?linkid=2153829.
            catch (Exception ex)
            {
                tracingService?.Trace("An error occurred executing Plugin AvaDataverseDemo.AvaPlugin.PreValidationava_projectCreate : {0}", ex.ToString());
                throw new InvalidPluginExecutionException("An error occurred executing Plugin AvaDataverseDemo.AvaPlugin.PreValidationava_projectCreate .", ex);
            }	
        }
    }
}
